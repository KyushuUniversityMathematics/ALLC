library

@v_index=0;
@f_index=0;
@b_index=0;
variable @tmp_v;
free @tmp_f;
binary @tmp_b;

def getV(){
    @v_index+=1;
    @tmp_v[@v_index-1];
}

def getF(){
    @f_index+=1;
    @tmp_f[@f_index-1];
}

def getB(){
    @b_index+=1;
    @tmp_b[@b_index-1];
}

def range(a,b){
    var ret=[];
    if(a>=b)ret;
    else{
	for(var i=a;i<b;i+=1)ret+=[i];
	ret;
    }
}

def map(f,l){
    var ret=[];
    for x in l:
	ret+=[f(x)];
    ret;
}

def sum(l){
    var ret=0;
    for x in l:
	ret+=x;
    ret;
}

def max(a,b){
    if(a>=b)a;
    else b;
}

def min(a,b){
    if(a<b)a;
    else b;
}

def apx(f,a,b,n,x,y){
#    var nf=getF();
    var dx=(b-a)/n;
    var sum=f(a);
    var sum2=a;
    var zi_1=1;
    for i in range(0,n):{
	var x1=a+(b-a)*i/n;
	var x2=x1+dx;
	var y1=f(x1);
	var y2=f(x2);
	var d=(y2-y1)/dx;
	var xi=getV();
	var zi=getB();
	sum+=d*xi;
	sum2+=xi;
	subject{
	    xi<=dx;
	    dx*zi<=xi;
	    xi<=dx*zi_1;
	}
	zi_1=zi;
    }
    subject{
	y==sum;
	x==sum2;
    }
    y;
}
