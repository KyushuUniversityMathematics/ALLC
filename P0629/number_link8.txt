import stdlib
minimize

#mは行数,nは列数,tはマスに書かれる数字の最大値
m=7;n=7;t=5;

dx=[1,0,-1,0];
dy=[0,1,0,-1];

#x[i][j]がi行j列目の数字をあらわす(ただし、i,jは1から始まる)
general x;

#初期値、周りにダミーのマス目を用意している
N=[[0,0,0,0,0,0,0,0,0],
   [0,1,0,4,0,0,0,0,0],
   [0,2,0,0,0,0,3,0,0],
   [0,0,0,0,2,0,0,0,0],
   [0,0,0,0,0,0,0,0,0],
   [0,0,0,0,0,0,0,0,0],
   [0,0,0,5,0,4,0,0,0],
   [0,1,0,3,0,0,0,5,0],
   [0,0,0,0,0,0,0,0,0]];

subject{
#全てのマスにはt以下の数字が書かれる
    forall i in range(0,m+2),j in range(0,n+2):x[i][j]<=t;
#ダミーのマス目には0が書かれている
    forall i in range(0,m+2),j in range(0,n+2):(i==0||i==m+1||j==0||j==n+1)->x[i][j]==0;
#初期値が与えられていれば、その数字が書かれる
    forall i in range(0,m+2),j in range(0,n+2):N[i][j]>=1->x[i][j]==N[i][j];
#初期値が与えられれば、そのマス目と同じ数字が上下左右に1つ存在する
    forall i in range(1,m+1),j in range(1,n+1):
        N[i][j]>=1->
            exists(1) k in range(0,4):
                x[i][j]==x[i+dx[k]][j+dy[k]];
#初期値がなければ、そのマス目と同じ数字が上下左右に2つ存在する
    forall i in range(1,m+1),j in range(1,n+1):
    	N[i][j]==0&&x[i][j]>=1->
	        exists(2) k in range(0,4):
		        x[i][j]==x[i+dx[k]][j+dy[k]];
    @object==0;
}
